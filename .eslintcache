[{"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js":"1","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js":"2","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx":"3","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx":"4","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx":"5","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js":"6","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx":"7","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx":"8","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx":"9","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx":"10","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx":"11","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx":"12","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js":"13","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js":"14","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx":"15","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx":"16","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js":"17","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx":"18","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js":"19","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js":"20","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx":"21","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx":"22","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx":"23","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx":"24","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js":"25","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js":"26","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx":"27","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx":"28","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js":"29","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx":"30","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx":"31","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx":"32","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx":"33","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx":"34","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SCard.jsx":"35"},{"size":362,"mtime":1609176012785,"results":"36","hashOfConfig":"37"},{"size":744,"mtime":1609299009078,"results":"38","hashOfConfig":"37"},{"size":1965,"mtime":1609965176341,"results":"39","hashOfConfig":"37"},{"size":4432,"mtime":1609966262069,"results":"40","hashOfConfig":"37"},{"size":701,"mtime":1609181893606,"results":"41","hashOfConfig":"37"},{"size":484,"mtime":1609931921040,"results":"42","hashOfConfig":"37"},{"size":301,"mtime":1609961961054,"results":"43","hashOfConfig":"37"},{"size":6541,"mtime":1609661285541,"results":"44","hashOfConfig":"37"},{"size":5358,"mtime":1609965905514,"results":"45","hashOfConfig":"37"},{"size":788,"mtime":1609967015571,"results":"46","hashOfConfig":"37"},{"size":2333,"mtime":1609303848599,"results":"47","hashOfConfig":"37"},{"size":1635,"mtime":1609663197916,"results":"48","hashOfConfig":"37"},{"size":2928,"mtime":1609317645542,"results":"49","hashOfConfig":"37"},{"size":6209,"mtime":1609661792928,"results":"50","hashOfConfig":"37"},{"size":1655,"mtime":1609306100282,"results":"51","hashOfConfig":"37"},{"size":259,"mtime":1609298596832,"results":"52","hashOfConfig":"37"},{"size":413,"mtime":1609300664691,"results":"53","hashOfConfig":"37"},{"size":1164,"mtime":1609966888991,"results":"54","hashOfConfig":"37"},{"size":511,"mtime":1613394005835,"results":"55","hashOfConfig":"56"},{"size":413,"mtime":1613299167435,"results":"57","hashOfConfig":"58"},{"size":259,"mtime":1613299167432,"results":"59","hashOfConfig":"58"},{"size":2323,"mtime":1613469773063,"results":"60","hashOfConfig":"58"},{"size":4336,"mtime":1614507473106,"results":"61","hashOfConfig":"58"},{"size":8888,"mtime":1613456809596,"results":"62","hashOfConfig":"58"},{"size":6800,"mtime":1614508996726,"results":"63","hashOfConfig":"58"},{"size":3124,"mtime":1614509498781,"results":"64","hashOfConfig":"58"},{"size":658,"mtime":1613303544222,"results":"65","hashOfConfig":"58"},{"size":1745,"mtime":1614509053819,"results":"66","hashOfConfig":"58"},{"size":918,"mtime":1613404036712,"results":"67","hashOfConfig":"58"},{"size":1333,"mtime":1614501946429,"results":"68","hashOfConfig":"58"},{"size":3425,"mtime":1614509401917,"results":"69","hashOfConfig":"58"},{"size":6121,"mtime":1614513084340,"results":"70","hashOfConfig":"58"},{"size":8634,"mtime":1614501977334,"results":"71","hashOfConfig":"58"},{"size":787,"mtime":1613404432437,"results":"72","hashOfConfig":"58"},{"size":301,"mtime":1613299167417,"results":"73","hashOfConfig":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1fbvc2n",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ceaoof",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"198lg4a",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js",[],["155","156"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx",["157","158","159","160","161"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx",["162","163"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx",["164"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx",["165"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx",["166"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {Card,List,Header} from \"semantic-ui-react\";\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\n\r\n// this will be initialized from the server\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n\r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[]);\r\n\r\n    const [paper,setPaper] = useState({\r\n        grade:\"\",\r\n        subject:\"\",\r\n        paperType:\"\"\r\n    })\r\n\r\n    const handleInputChange = (e) => {\r\n        setPaper({...paper,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const createPaper = () => {\r\n        createPaperDispatch({...paper},authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id,authToken);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SModal handleInputChange={handleInputChange} createPaper={createPaper}/>\r\n            {Object.keys(papers).map((paperType,p_index) => {\r\n                return (\r\n                    <React.Fragment key={`pt_${p_index}`}>\r\n                        <Header as=\"h5\">{paperType}</Header>\r\n                        <Card>\r\n                            <Card.Content>\r\n                                <List divided verticalAlign='middle'>\r\n                                        {papers[paperType].papers.map((pp,index) => {\r\n                                            return (\r\n                                                <List.Item key={`pp_${index}`} onClick={() => handlePaperSelect(`${pp.id}`)}>\r\n                                                    <List.Icon name='file alternate' />\r\n                                                    <List.Content>\r\n                                                        <List.Header as='a'>{pp.name}</List.Header>\r\n                                                    </List.Content>\r\n                                                </List.Item>\r\n                                            );\r\n                                        })}\r\n                                </List>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </React.Fragment>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;",["167","168"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx",["169","170"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js",[],["171","172"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx",[],["173","174"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js",[],["175","176"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx",[],["177","178"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx",["179"],"import React,{useEffect,useContext} from 'react';\r\nimport {Card,List,Header} from \"semantic-ui-react\";\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\n\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n\r\n    // we want to use a suspense here\r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[]);\r\n\r\n    const createPaper = (paper) => {\r\n        createPaperDispatch(paper,authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SModal createPaper={createPaper}/>\r\n            <div  style={{height:\"85vh\", overflowY:\"scroll\", marginTop:\"10px\", padding:\"10px\"}}>\r\n                {Object.keys(papers).map((paperType,p_index) => {\r\n                    return (\r\n                        <React.Fragment key={`pt_${p_index}`}>\r\n                            <Header as=\"h5\">{paperType}</Header>\r\n                                <Card>\r\n                                    <Card.Content>\r\n                                        <List divided verticalAlign='middle'>\r\n                                            {papers[paperType].papers.map((pp,index) => {\r\n                                                return (\r\n                                                    <List.Item key={`pp_${index}`} onClick={() => handlePaperSelect(`${pp.id}`)}>\r\n                                                        <List.Icon name='file alternate' />\r\n                                                        <List.Content>\r\n                                                            <List.Header as='a'>{pp.name.charAt(0).toUpperCase() + pp.name.slice(1)}</List.Header>\r\n                                                        </List.Content>\r\n                                                    </List.Item>\r\n                                                );\r\n                                            })}\r\n                                        </List>\r\n                                    </Card.Content>\r\n                                </Card>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;",["180","181"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx",["182"],"import React,{useState,useEffect,useContext} from \"react\";\r\nimport { Button, Form, Modal,Dropdown } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { PaperContext } from '../context/paperContext';\r\n\r\nconst SModal = ({createPaper}) => {\r\n    const { authToken,createNotification } = useContext(PaperContext);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [gradeSelection,setGradeSelection] = useState([]);\r\n    const [subjectSelection,setSubjectSelection] = useState({});\r\n    const [paperTypeSelection,setPaperTypeSelection] = useState([]);\r\n    const [displaySubjects,setDisplaySubjects] = useState([]);\r\n    \r\n    const [paper,setPaper] = useState({\r\n        grade:\"\",\r\n        subject:\"\",\r\n        paperType:\"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      axios.get(\"/user/metadata\",{\r\n        headers:{\r\n            AuthToken:authToken\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          let paperTypesFetched = data.paperTypeCanDo.map((x,index) => {\r\n            return { key: `${x.replaceAll(\" \",\"\")}_${index}`, text: x, value: x }\r\n          })\r\n\r\n          setPaperTypeSelection(paperTypesFetched);\r\n\r\n          let gradesFetched = data.contentCanDo.map((x,index) => ({ key: `${x.grade}_${index}`, text: x.grade, value: x.grade}));\r\n          setGradeSelection(gradesFetched);\r\n\r\n          let subjectsMapping = data.contentCanDo.reduce((acc,current) => {\r\n            acc[current.grade] = current.subjects.map((x,index) => ({key: `${x.replaceAll(\" \",\"\")}_${index}`, text: x, value: x}));\r\n            return acc;\r\n          },{});\r\n\r\n          setSubjectSelection(subjectsMapping);\r\n        })\r\n        .catch(error => {\r\n          setOpen(false);\r\n          createNotification(\"Error!\",\"danger\",error.message);\r\n        })\r\n\r\n    },[]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createPaper(paper);\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleGradeSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          grade:value\r\n        });\r\n        setDisplaySubjects(subjectSelection[value]);\r\n    }\r\n\r\n    const handleSubjectSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          subject:value\r\n        });\r\n    }\r\n\r\n    const handlePaperTypeSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          paperType:value\r\n        });\r\n    }\r\n\r\n    const handleOnClose = (e) => {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n    }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      size=\"tiny\"\r\n      open={open}\r\n      trigger={<Button fluid color=\"brown\" content='create paper' icon='pencil alternate' labelPosition='right'/>}\r\n    >\r\n      <Modal.Header>New Paper</Modal.Header>\r\n        <Modal.Content>\r\n        <Form>\r\n            <Form.Field>\r\n                <label>Grade</label>\r\n                <Dropdown\r\n                        onChange={handleGradeSelection}\r\n                        selection\r\n                        fluid\r\n                        options={gradeSelection}\r\n                        placeholder='Select Grade'\r\n                    />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Subject</label>\r\n                <Dropdown\r\n                        onChange={handleSubjectSelection}\r\n                        selection\r\n                        fluid\r\n                        options={displaySubjects}\r\n                        placeholder='Select Subject'\r\n                    />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Paper Type</label>\r\n                <Dropdown\r\n                        onChange={handlePaperTypeSelection}\r\n                        selection\r\n                        fluid\r\n                        options={paperTypeSelection}\r\n                        placeholder='Select Paper Type'\r\n                    />\r\n            </Form.Field> \r\n        </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button.Group>\r\n            <Button color='black' onClick={handleOnClose}>Cancel</Button>\r\n            <Button.Or />\r\n            <Button onClick={handleSubmit} positive>Create Paper</Button>\r\n          </Button.Group>\r\n        </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SModal;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx",["183"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx",["184","185"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx",["186"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx",["187"],"import React,{useState,useContext,useEffect} from \"react\";\r\nimport {Button,Header,Transition,Segment,Label} from \"semantic-ui-react\";\r\nimport {motion} from 'framer-motion';\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport QuestionComp from \"./question\";\r\nimport {PaperContext} from \"../context/paperContext\";\r\n\r\n\r\nconst CAN_REVIEW = \"can:review\";\r\n\r\n\r\n// first we will fetch the already created questions from the database and then enable the use to create questions\r\nconst Paper = ({fetched_questions=[]}) => {\r\n    const {authToken\r\n        ,createNotification\r\n        ,paperID\r\n        ,isSubmittedDispatch\r\n        ,isSubmitted\r\n        ,submitPaperDispatch\r\n        ,approveQuestionDispatch\r\n        ,removeQuestionDispatch\r\n        ,fetchPapers\r\n        ,roles} = useContext(PaperContext);\r\n\r\n    const check_role = (role_required) => roles.includes(role_required);\r\n    \r\n    const [isHidden,setIsHidden] = useState(new Array(fetched_questions.length).fill(true));\r\n    const [paperQuestions,setPaperQuestions] = useState(fetched_questions);\r\n    const [is_submitted,setIsSubmitted] = useState(isSubmitted);\r\n\r\n    // check this\r\n    useEffect(() => {\r\n\r\n    },[isSubmitted]);\r\n\r\n    const updatePaperContent = (new_question,index) => {\r\n        let local_paper_copy = [...paperQuestions];\r\n        local_paper_copy[index] = new_question;\r\n        setPaperQuestions(local_paper_copy);\r\n    }\r\n\r\n\r\n    const addQuestion = (e) => {\r\n        setPaperQuestions([...paperQuestions,null]);\r\n    }\r\n\r\n    const removeQuestion = (questionId,index) => {\r\n\r\n        // show something like a prompt before allowing this\r\n        let paperQuestionsCopy = [...paperQuestions];\r\n        let question_object = paperQuestionsCopy[index];\r\n\r\n        let cleanUpFunc = () => {\r\n            paperQuestionsCopy.splice(index,1);\r\n            setPaperQuestions(paperQuestionsCopy);\r\n            createNotification(\"Success!\",\"success\",\"Question removed successfully\");\r\n        }\r\n\r\n        if(question_object){\r\n            removeQuestionDispatch(questionId,authToken)\r\n                .then(() => {\r\n                    cleanUpFunc();\r\n                })\r\n                .catch(error => {\r\n                    createNotification(\"Error!\",\"error\",error.message);\r\n                })\r\n        }else{\r\n            cleanUpFunc();\r\n        }\r\n    }\r\n\r\n    const updateQuestionsState = (status,index) => {\r\n        let paperQuestionsCopy = [...paperQuestions];\r\n        let question_object = paperQuestionsCopy[index];\r\n        question_object.status = status;\r\n        setPaperQuestions([...paperQuestionsCopy]);\r\n    }\r\n\r\n    const runJobs = () => {\r\n        const socket = io(\"https://sleepy-lake-97311.herokuapp.com/\");//\"http://localhost:3500/\"); // start the connection here\r\n        socket.emit(\"runTest\",paperID);\r\n        socket.on(\"results\",results => {\r\n            console.log(results);\r\n        });\r\n\r\n        socket.on(\"error\",result => {\r\n            console.log(result);\r\n        })\r\n        \r\n        socket.on(\"finished\",results => {\r\n            console.log(\"finished\");\r\n            socket.disconnect();\r\n        })\r\n    }\r\n\r\n    // we need to update`\r\n    const submitForReviewAction = () => {\r\n        submitPaperDispatch(paperID,authToken)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    createNotification(\"Success!\",\"success\",\"Paper Submitted Successfully!!\");\r\n                    setIsSubmitted(true); // this seems to be stupid --> remove this\r\n                    isSubmittedDispatch(true); // dipatch the isSubmitted stuff\r\n                    fetchPapers(authToken);\r\n\r\n                    runJobs(); // this should actually run before --> if any stuff is false we do not submit the paper\r\n\r\n                }else{\r\n                    throw new Error(\"Failed to submit paper for review\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                createNotification(\"Error!\",\"danger\",error.message);\r\n            })\r\n    }\r\n\r\n    const approveAuthorQuestion = (id,index) => {\r\n        approveQuestionDispatch(id,index,authToken)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    // let paperQuestionsCopy = [...paperQuestions];\r\n                    // let question_object = paperQuestionsCopy[index];\r\n                    // question_object.status = \"approved\";\r\n                    // setPaperQuestions([...paperQuestionsCopy]);\r\n                    updateQuestionsState(\"approved\",index)\r\n                }else{\r\n                    throw new Error(\"Failed to approve question\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                createNotification(\"Error!\",\"danger\",error.message);\r\n            });\r\n    }\r\n\r\n    // a question should manage this for christ sake\r\n    const toggleQuestionVisibility = (index) => {\r\n        // find a better way to handle this\r\n        let clone_state = [...isHidden];\r\n        clone_state[index] = clone_state[index] ? !clone_state[index] : true;\r\n        setIsHidden(clone_state)\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity:0 }}\r\n            animate={{ opacity:1, duration:0.4 }}\r\n        >      \r\n            <div style={{marginBottom:\"20px\"}}>\r\n                <Button color=\"teal\" disabled={is_submitted} onClick={addQuestion} content='create question' icon='add' labelPosition='right'/>\r\n                \r\n                <Button \r\n                    color=\"orange\" \r\n                    disabled={check_role(CAN_REVIEW) || is_submitted}\r\n                    onClick={submitForReviewAction} \r\n                    content='submit paper' \r\n                    icon='send' \r\n                    labelPosition='right'/>\r\n            </div>\r\n\r\n            \r\n            <div style={{height:\"85vh\", overflowY:\"scroll\", marginTop:\"10px\", paddingRight:\"10px\", paddingLeft:\"10px\"}} >\r\n                {paperQuestions.map((retrievedQuestion,index) => {\r\n                    return (\r\n                        <React.Fragment key={`question_${index}`}>\r\n                            \r\n                                <Segment.Group horizontal>\r\n                                    <Segment onClick={(x) => toggleQuestionVisibility(index)} style={{cursor:\"pointer\"}} color='orange'>\r\n                                        <Header as='h3'>Question  {index + 1}</Header>\r\n                                    </Segment>\r\n                                    <Segment basic textAlign={\"center\"} color=\"green\">\r\n                                        <Label color='green'>\r\n                                            {retrievedQuestion && retrievedQuestion.status ? retrievedQuestion.status.toUpperCase() : \"ONGOING\"}\r\n                                        </Label>\r\n                                    </Segment>\r\n                                    <Segment basic textAlign={\"right\"} color='red'>\r\n                                    {is_submitted && check_role(CAN_REVIEW)? \r\n                                        <Button basic color=\"orange\" \r\n                                            disabled={retrievedQuestion && retrievedQuestion.isExposed} \r\n                                            icon \r\n                                            onClick={(e) => approveAuthorQuestion(retrievedQuestion && retrievedQuestion._id,index)} \r\n                                            content=\"Approve\" icon=\"thumbs up alternate outline\" labelPosition=\"right\"/> : null\r\n                                    }\r\n                                        \r\n                                        <Button basic color=\"red\" disabled={isSubmitted} onClick={(e) => removeQuestion(retrievedQuestion ? retrievedQuestion._id:null,index)} content=\"Delete\" icon=\"trash alternate outline\" labelPosition=\"right\"/>\r\n                                    \r\n                                    </Segment>\r\n                                </Segment.Group>\r\n                            \r\n                            <Transition visible={isHidden[index] ? !isHidden[index] : true} animation='drop' duration={450}>\r\n                                <div style={{marginBottom:\"20px\"}}>\r\n                                    <QuestionComp key={`question_${index}`} updatePaperContent={updatePaperContent} retrievedQuestion={retrievedQuestion} index={index}/>\r\n                                </div>\r\n                            </Transition>\r\n\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n\r\n            </div>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Paper;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SCard.jsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":24,"nodeType":"194","messageId":"195","endLine":1,"endColumn":34},{"ruleId":"192","severity":1,"message":"196","line":2,"column":14,"nodeType":"194","messageId":"195","endLine":2,"endColumn":19},{"ruleId":"192","severity":1,"message":"197","line":2,"column":20,"nodeType":"194","messageId":"195","endLine":2,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":17,"column":9,"nodeType":"200","messageId":"201","endLine":22,"endColumn":10},{"ruleId":"198","severity":1,"message":"199","line":26,"column":9,"nodeType":"200","messageId":"201","endLine":31,"endColumn":10},{"ruleId":"192","severity":1,"message":"202","line":6,"column":8,"nodeType":"194","messageId":"195","endLine":6,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":83,"column":258,"nodeType":"205","endLine":83,"endColumn":282},{"ruleId":"206","severity":1,"message":"207","line":4,"column":22,"nodeType":"208","messageId":"209","endLine":4,"endColumn":24},{"ruleId":"192","severity":1,"message":"210","line":2,"column":14,"nodeType":"194","messageId":"195","endLine":2,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":13,"column":7,"nodeType":"213","endLine":13,"endColumn":9,"suggestions":"214"},{"ruleId":"188","replacedBy":"215"},{"ruleId":"190","replacedBy":"216"},{"ruleId":"192","severity":1,"message":"217","line":2,"column":18,"nodeType":"194","messageId":"195","endLine":2,"endColumn":24},{"ruleId":"192","severity":1,"message":"218","line":2,"column":31,"nodeType":"194","messageId":"195","endLine":2,"endColumn":39},{"ruleId":"188","replacedBy":"219"},{"ruleId":"190","replacedBy":"220"},{"ruleId":"188","replacedBy":"221"},{"ruleId":"190","replacedBy":"222"},{"ruleId":"188","replacedBy":"223"},{"ruleId":"190","replacedBy":"224"},{"ruleId":"188","replacedBy":"225"},{"ruleId":"190","replacedBy":"226"},{"ruleId":"211","severity":1,"message":"212","line":13,"column":7,"nodeType":"213","endLine":13,"endColumn":9,"suggestions":"227"},{"ruleId":"188","replacedBy":"228"},{"ruleId":"190","replacedBy":"229"},{"ruleId":"211","severity":1,"message":"230","line":49,"column":7,"nodeType":"213","endLine":49,"endColumn":9,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"232","line":39,"column":7,"nodeType":"213","endLine":39,"endColumn":16,"suggestions":"233"},{"ruleId":"198","severity":1,"message":"199","line":47,"column":9,"nodeType":"200","messageId":"201","endLine":52,"endColumn":10},{"ruleId":"198","severity":1,"message":"199","line":56,"column":9,"nodeType":"200","messageId":"201","endLine":61,"endColumn":10},{"ruleId":"211","severity":1,"message":"234","line":44,"column":7,"nodeType":"213","endLine":44,"endColumn":9,"suggestions":"235"},{"ruleId":"203","severity":1,"message":"204","line":183,"column":63,"nodeType":"205","endLine":183,"endColumn":97},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Segment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'SCard' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'fetchPapers'. Either include them or remove the dependency array.","ArrayExpression",["238"],["236"],["237"],"'Header' is defined but never used.","'Checkbox' is defined but never used.",["236"],["237"],["236"],["237"],["236"],["237"],["236"],["237"],["239"],["236"],["237"],"React Hook useEffect has missing dependencies: 'authToken' and 'createNotification'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'authToken', 'fetchQuestions', 'isSubmittedDispatch', and 'updatePaperDetails'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'retrievedQuestion'. Either include it or remove the dependency array.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"243","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [authToken, fetchPapers]",{"range":"252","text":"253"},{"range":"254","text":"253"},"Update the dependencies array to be: [authToken, createNotification]",{"range":"255","text":"256"},"Update the dependencies array to be: [authToken, fetchQuestions, isSubmittedDispatch, paperID, updatePaperDetails]",{"range":"257","text":"258"},"Update the dependencies array to be: [retrievedQuestion]",{"range":"259","text":"260"},[442,444],"[authToken, fetchPapers]",[427,429],[1776,1778],"[authToken, createNotification]",[1184,1193],"[authToken, fetchQuestions, isSubmittedDispatch, paperID, updatePaperDetails]",[1897,1899],"[retrievedQuestion]"]