[{"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js":"1","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js":"2","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx":"3","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx":"4","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx":"5","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js":"6","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx":"7","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx":"8","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx":"9","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx":"10","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx":"11","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx":"12","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js":"13","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js":"14","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\hooks\\useAxios.js":"15","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx":"16","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx":"17","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js":"18"},{"size":362,"mtime":1609176012785,"results":"19","hashOfConfig":"20"},{"size":744,"mtime":1609299009078,"results":"21","hashOfConfig":"20"},{"size":2139,"mtime":1609255770407,"results":"22","hashOfConfig":"20"},{"size":3159,"mtime":1609315642615,"results":"23","hashOfConfig":"20"},{"size":701,"mtime":1609181893606,"results":"24","hashOfConfig":"20"},{"size":500,"mtime":1609176012785,"results":"25","hashOfConfig":"20"},{"size":284,"mtime":1609186497484,"results":"26","hashOfConfig":"20"},{"size":6541,"mtime":1609661285541,"results":"27","hashOfConfig":"20"},{"size":5114,"mtime":1609318450370,"results":"28","hashOfConfig":"20"},{"size":793,"mtime":1609661592788,"results":"29","hashOfConfig":"20"},{"size":2333,"mtime":1609303848599,"results":"30","hashOfConfig":"20"},{"size":1635,"mtime":1609663197916,"results":"31","hashOfConfig":"20"},{"size":2928,"mtime":1609317645542,"results":"32","hashOfConfig":"20"},{"size":6209,"mtime":1609661792928,"results":"33","hashOfConfig":"20"},{"size":478,"mtime":1609230801430,"results":"34","hashOfConfig":"20"},{"size":1655,"mtime":1609306100282,"results":"35","hashOfConfig":"20"},{"size":259,"mtime":1609298596832,"results":"36","hashOfConfig":"20"},{"size":413,"mtime":1609300664691,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fbvc2n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js",[],["79","80"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx",["81","82","83","84"],"import React,{useState,useContext} from \"react\";\r\nimport {Form,Label,Segment} from \"semantic-ui-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nimport SCard from './SCard';\r\nimport NormalQuestionComp from \"./normalQues\";\r\nimport Comprehension from \"./comprehension\";\r\n\r\nconst QuestionComp = ({retrievedQuestion,index}) => {\r\n    const [questionType,setQuestionType] = useState(retrievedQuestion ? retrievedQuestion.questionType : \"normal\");\r\n\r\n    const handleQuestionTypeChange = (e) => {\r\n        setQuestionType(e.target.value);\r\n    }\r\n\r\n    const renderComp = (condition) => {\r\n        switch(condition){\r\n            case 'normal':\r\n                return <NormalQuestionComp questionType={condition}/>\r\n            case \"comprehension\":\r\n                return <Comprehension questionType={condition}/>\r\n        }\r\n    }\r\n\r\n    const renderAllreadyFilled =  (question,index) => {\r\n        switch(question.questionType){\r\n            case 'normal':\r\n                return <NormalQuestionComp retrievedQuestion={retrievedQuestion} index={index}/>\r\n            case \"comprehension\":\r\n                return <Comprehension retrievedQuestion={retrievedQuestion} index={index}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SCard>\r\n            <Form style={{marginBottom:\"10px\"}}>\r\n                <Label color='green' ribbon='right'>\r\n                    {retrievedQuestion ? retrievedQuestion.status.toUpperCase() : \"ONGOING\"}\r\n                </Label>\r\n                <Form.Field>\r\n                    <label htmlFor=\"questionType\">Select the question type</label>\r\n\r\n                    <select id=\"questionType\" value={questionType} onChange={handleQuestionTypeChange}>\r\n                        <option value=\"normal\">normal</option>\r\n                        <option value=\"comprehension\">comprehension</option>\r\n                    </select>\r\n                </Form.Field>\r\n            </Form>\r\n            \r\n            {retrievedQuestion ? renderAllreadyFilled(retrievedQuestion,index) : renderComp(questionType)}\r\n          \r\n        </SCard>\r\n    );\r\n}\r\n\r\nexport default QuestionComp;",["85","86"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx",["87","88"],"import React,{useState,useContext} from \"react\";\r\nimport {Button,Header} from \"semantic-ui-react\";\r\n\r\nimport QuestionComp from \"./question\";\r\nimport {PaperContext} from \"../context/paperContext\";\r\n\r\n\r\n// first we will fetch the already created questions from the database and then enable the use to create questions\r\nconst Paper = () => {\r\n    // we use the current questions\r\n    const {currentQuestions\r\n        ,isSubmitted\r\n        ,removeQuestionDispatch\r\n        ,authToken,paperID\r\n        ,addQuestionDispatch\r\n        ,approveQuestionDispatch\r\n        ,isAdmin,submitPaperDispatch} = useContext(PaperContext);\r\n    //const [questions,setQuestions] = useState([new Array(currentQuestions.length)]);\r\n    \r\n    const addQuestion = (e) => {\r\n        addQuestionDispatch();\r\n    }\r\n\r\n    const removeQuestion = (questionId,index) => {\r\n        // let localQuestions = [...questions];\r\n        // localQuestions.splice(index,1);\r\n        // setQuestions(localQuestions);\r\n        removeQuestionDispatch(questionId,index);\r\n    }\r\n\r\n    const submitForReviewAction = () => {\r\n        // this should add the question to the admin's review board\r\n        submitPaperDispatch(paperID,authToken);\r\n    }\r\n\r\n    const approveAuthorQuestion = (id,index) => {\r\n        // id is the id of the question\r\n        // index is its position in the current state ---> for live reupdates\r\n        approveQuestionDispatch(id,index,authToken);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <div style={{marginBottom:\"20px\"}}>\r\n            <Button color=\"teal\" disabled={isSubmitted} onClick={addQuestion} content='create question' icon='add' labelPosition='right'/>\r\n            \r\n            {isAdmin || isSubmitted ? null : <Button color=\"orange\" \r\n                onClick={submitForReviewAction} \r\n                content='submit paper' \r\n                icon='send' \r\n                labelPosition='right'/>}\r\n            </div>\r\n            \r\n            <div>\r\n                {currentQuestions.map((retrievedQuestion,index) => {\r\n                    return (\r\n                        <React.Fragment key={`question_${index}`}>\r\n                            <Header as='h3'>Question {index + 1}</Header>\r\n                            <div style={{marginBottom:\"20px\"}}>\r\n                                <Button color=\"red\" onClick={(e) => removeQuestion(retrievedQuestion ? retrievedQuestion._id:null,index)} content=\"Delete\" icon=\"trash alternate outline\" labelPosition=\"right\"/>\r\n                                \r\n                                {isSubmitted && isAdmin ? <Button color=\"orange\" disabled={retrievedQuestion && retrievedQuestion.isExposed} icon onClick={(e) => approveAuthorQuestion(retrievedQuestion && retrievedQuestion._id,index)} content=\"Approve\" icon=\"thumbs up outline\" labelPosition=\"right\"/> : null}\r\n                                <QuestionComp key={`question_${index}`} retrievedQuestion={retrievedQuestion} index={index}/>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paper;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx",["89"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx",["90"],"import React,{useContext} from 'react';\r\nimport {Grid,Divider} from \"semantic-ui-react\";\r\n\r\nimport SideBar from \"./SideBar\";\r\nimport Paper from './paper';\r\nimport {PaperContext} from \"../context/paperContext\";\r\n\r\n// the creation of paper should be managed from here\r\n\r\nconst ContentPage = () => {\r\n   const {paperID} = useContext(PaperContext);\r\n\r\n    return (\r\n        <Grid celled style={{marginTop:\"20px\"}}>\r\n            <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                    \r\n                    <SideBar/>\r\n                   \r\n                </Grid.Column>\r\n\r\n\r\n                <Grid.Column width={12}>\r\n                   {paperID ? <Paper/> : null} \r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ContentPage;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx",["91"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx",["92","93"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\hooks\\useAxios.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":24,"nodeType":"100","messageId":"101","endLine":1,"endColumn":34},{"ruleId":"98","severity":1,"message":"102","line":2,"column":20,"nodeType":"100","messageId":"101","endLine":2,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":17,"column":9,"nodeType":"105","messageId":"106","endLine":22,"endColumn":10},{"ruleId":"103","severity":1,"message":"104","line":26,"column":9,"nodeType":"105","messageId":"106","endLine":31,"endColumn":10},{"ruleId":"94","replacedBy":"107"},{"ruleId":"96","replacedBy":"108"},{"ruleId":"98","severity":1,"message":"109","line":1,"column":15,"nodeType":"100","messageId":"101","endLine":1,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":63,"column":254,"nodeType":"112","endLine":63,"endColumn":278},{"ruleId":"113","severity":1,"message":"114","line":4,"column":22,"nodeType":"115","messageId":"116","endLine":4,"endColumn":24},{"ruleId":"98","severity":1,"message":"117","line":2,"column":14,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":13,"column":7,"nodeType":"120","endLine":13,"endColumn":9,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"122","line":2,"column":18,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"123","line":2,"column":31,"nodeType":"100","messageId":"101","endLine":2,"endColumn":39},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["124"],["125"],"'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'fetchPapers'. Either include them or remove the dependency array.","ArrayExpression",["126"],"'Header' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [authToken, fetchPapers]",{"range":"129","text":"130"},[442,444],"[authToken, fetchPapers]"]