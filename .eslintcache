[{"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js":"1","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js":"2","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx":"3","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx":"4","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx":"5","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js":"6","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx":"7","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx":"8","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx":"9","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx":"10","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx":"11","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx":"12","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js":"13","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js":"14","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx":"15","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx":"16","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js":"17","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx":"18","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js":"19","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js":"20","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx":"21","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx":"22","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx":"23","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx":"24","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js":"25","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js":"26","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx":"27","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx":"28","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js":"29","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx":"30","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx":"31","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx":"32","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx":"33","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx":"34","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SCard.jsx":"35","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\Navbar.jsx":"36","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\actionTypes.js":"37","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FolderComp.jsx":"38","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\analytics.jsx":"39","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\Notifications.jsx":"40","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\StatusComp.jsx":"41","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SearchForm.jsx":"42"},{"size":362,"mtime":1609176012785,"results":"43","hashOfConfig":"44"},{"size":744,"mtime":1609299009078,"results":"45","hashOfConfig":"44"},{"size":1965,"mtime":1609965176341,"results":"46","hashOfConfig":"44"},{"size":4432,"mtime":1609966262069,"results":"47","hashOfConfig":"44"},{"size":701,"mtime":1609181893606,"results":"48","hashOfConfig":"44"},{"size":484,"mtime":1609931921040,"results":"49","hashOfConfig":"44"},{"size":301,"mtime":1609961961054,"results":"50","hashOfConfig":"44"},{"size":6541,"mtime":1609661285541,"results":"51","hashOfConfig":"44"},{"size":5358,"mtime":1609965905514,"results":"52","hashOfConfig":"44"},{"size":788,"mtime":1609967015571,"results":"53","hashOfConfig":"44"},{"size":2333,"mtime":1609303848599,"results":"54","hashOfConfig":"44"},{"size":1635,"mtime":1609663197916,"results":"55","hashOfConfig":"44"},{"size":2928,"mtime":1609317645542,"results":"56","hashOfConfig":"44"},{"size":6209,"mtime":1609661792928,"results":"57","hashOfConfig":"44"},{"size":1655,"mtime":1609306100282,"results":"58","hashOfConfig":"44"},{"size":259,"mtime":1609298596832,"results":"59","hashOfConfig":"44"},{"size":413,"mtime":1609300664691,"results":"60","hashOfConfig":"44"},{"size":1164,"mtime":1609966888991,"results":"61","hashOfConfig":"44"},{"size":511,"mtime":1613394005835,"results":"62","hashOfConfig":"63"},{"size":419,"mtime":1618889495548,"results":"64","hashOfConfig":"63"},{"size":259,"mtime":1613299167432,"results":"65","hashOfConfig":"63"},{"size":1431,"mtime":1618915632609,"results":"66","hashOfConfig":"63"},{"size":4344,"mtime":1618910700787,"results":"67","hashOfConfig":"63"},{"size":9082,"mtime":1620627748746,"results":"68","hashOfConfig":"63"},{"size":7840,"mtime":1620588147029,"results":"69","hashOfConfig":"63"},{"size":2873,"mtime":1616268871484,"results":"70","hashOfConfig":"63"},{"size":658,"mtime":1613303544222,"results":"71","hashOfConfig":"63"},{"size":2684,"mtime":1620582446233,"results":"72","hashOfConfig":"63"},{"size":1178,"mtime":1616314823017,"results":"73","hashOfConfig":"63"},{"size":1640,"mtime":1616309977696,"results":"74","hashOfConfig":"63"},{"size":3559,"mtime":1616305991212,"results":"75","hashOfConfig":"63"},{"size":6615,"mtime":1620627706762,"results":"76","hashOfConfig":"63"},{"size":8433,"mtime":1620585190136,"results":"77","hashOfConfig":"63"},{"size":1126,"mtime":1618910162038,"results":"78","hashOfConfig":"63"},{"size":301,"mtime":1613299167417,"results":"79","hashOfConfig":"63"},{"size":1416,"mtime":1618910300508,"results":"80","hashOfConfig":"63"},{"size":560,"mtime":1618889472159,"results":"81","hashOfConfig":"63"},{"size":2062,"mtime":1618916411322,"results":"82","hashOfConfig":"63"},{"size":1486,"mtime":1616314756024,"results":"83","hashOfConfig":"63"},{"size":3172,"mtime":1616314578486,"results":"84","hashOfConfig":"63"},{"size":1334,"mtime":1620586182762,"results":"85","hashOfConfig":"63"},{"size":1001,"mtime":1620580610313,"results":"86","hashOfConfig":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1fbvc2n",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"198lg4a",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"137"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js",[],["191","192"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx",["193","194","195","196","197"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx",["198","199"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx",["200"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx",["201"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx",["202"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {Card,List,Header} from \"semantic-ui-react\";\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\n\r\n// this will be initialized from the server\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n\r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[]);\r\n\r\n    const [paper,setPaper] = useState({\r\n        grade:\"\",\r\n        subject:\"\",\r\n        paperType:\"\"\r\n    })\r\n\r\n    const handleInputChange = (e) => {\r\n        setPaper({...paper,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const createPaper = () => {\r\n        createPaperDispatch({...paper},authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id,authToken);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SModal handleInputChange={handleInputChange} createPaper={createPaper}/>\r\n            {Object.keys(papers).map((paperType,p_index) => {\r\n                return (\r\n                    <React.Fragment key={`pt_${p_index}`}>\r\n                        <Header as=\"h5\">{paperType}</Header>\r\n                        <Card>\r\n                            <Card.Content>\r\n                                <List divided verticalAlign='middle'>\r\n                                        {papers[paperType].papers.map((pp,index) => {\r\n                                            return (\r\n                                                <List.Item key={`pp_${index}`} onClick={() => handlePaperSelect(`${pp.id}`)}>\r\n                                                    <List.Icon name='file alternate' />\r\n                                                    <List.Content>\r\n                                                        <List.Header as='a'>{pp.name}</List.Header>\r\n                                                    </List.Content>\r\n                                                </List.Item>\r\n                                            );\r\n                                        })}\r\n                                </List>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </React.Fragment>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;",["203","204"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx",["205","206"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js",[],["207","208"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx",[],["209","210"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js",[],["211","212"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js",[],["213","214"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js",[],["215","216"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx",[],["217","218"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx",["219"],"import React,{useEffect,useContext} from 'react';\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\nimport FolderComp from './FolderComp';\r\n\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n    \r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[]);\r\n\r\n    const createPaper = (paper) => {\r\n        createPaperDispatch(paper,authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id);\r\n    }\r\n\r\n    // create a folder view for these files and groupings\r\n    // check for the active paper then highlight it for visibility's sake\r\n    return (\r\n        <>\r\n            <SModal createPaper={createPaper}/>\r\n            <div  style={{height:\"85vh\", overflowY:\"scroll\", marginTop:\"10px\", padding:\"10px\"}}>\r\n                {Object.keys(papers).map((paperType,p_index) => {\r\n                    return (\r\n                        <React.Fragment key={`pt_${p_index}`}>\r\n                            <FolderComp handlePaperSelect={handlePaperSelect}\r\n                                paperType={paperType}\r\n                                papers = {papers[paperType].papers}\r\n                            />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx",["220"],"import React,{useState,useEffect,useContext} from \"react\";\r\nimport { Button, Form, Modal,Dropdown } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { PaperContext } from '../context/paperContext';\r\n\r\nconst SModal = ({createPaper}) => {\r\n    const { authToken,createNotification } = useContext(PaperContext);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [gradeSelection,setGradeSelection] = useState([]);\r\n    const [subjectSelection,setSubjectSelection] = useState({});\r\n    const [paperTypeSelection,setPaperTypeSelection] = useState([]);\r\n    const [displaySubjects,setDisplaySubjects] = useState([]);\r\n    \r\n    const [paper,setPaper] = useState({\r\n        grade:\"\",\r\n        subject:\"\",\r\n        paperType:\"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      axios.get(\"/user/metadata\",{\r\n        headers:{\r\n            AuthToken:authToken\r\n        }\r\n      })\r\n        .then(({ data }) => {\r\n          let paperTypesFetched = data.paperTypeCanDo.map((x,index) => {\r\n            return { key: `${x.replaceAll(\" \",\"\")}_${index}`, text: x, value: x }\r\n          })\r\n\r\n          setPaperTypeSelection(paperTypesFetched);\r\n\r\n          let gradesFetched = data.contentCanDo.map((x,index) => ({ key: `${x.grade}_${index}`, text: x.grade, value: x.grade}));\r\n          setGradeSelection(gradesFetched);\r\n\r\n          let subjectsMapping = data.contentCanDo.reduce((acc,current) => {\r\n            acc[current.grade] = current.subjects.map((x,index) => ({key: `${x.replaceAll(\" \",\"\")}_${index}`, text: x, value: x}));\r\n            return acc;\r\n          },{});\r\n\r\n          setSubjectSelection(subjectsMapping);\r\n        })\r\n        .catch(error => {\r\n          setOpen(false);\r\n          createNotification(\"Error!\",\"danger\",error.message);\r\n        })\r\n\r\n    },[]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createPaper(paper);\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleGradeSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          grade:value\r\n        });\r\n        setDisplaySubjects(subjectSelection[value]);\r\n    }\r\n\r\n    const handleSubjectSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          subject:value\r\n        });\r\n    }\r\n\r\n    const handlePaperTypeSelection = (_,{ value }) => {\r\n        setPaper({\r\n          ...paper,\r\n          paperType:value\r\n        });\r\n    }\r\n\r\n    const handleOnClose = (e) => {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n    }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      size=\"tiny\"\r\n      open={open}\r\n      trigger={<Button circular fluid color=\"grey\" content='create paper' icon='pencil alternate' labelPosition='right'/>}\r\n    >\r\n      <Modal.Header>New Paper</Modal.Header>\r\n        <Modal.Content>\r\n        <Form>\r\n            <Form.Field>\r\n                <label>Grade</label>\r\n                <Dropdown\r\n                        onChange={handleGradeSelection}\r\n                        selection\r\n                        fluid\r\n                        options={gradeSelection}\r\n                        placeholder='Select Grade'\r\n                    />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Subject</label>\r\n                <Dropdown\r\n                        onChange={handleSubjectSelection}\r\n                        selection\r\n                        fluid\r\n                        options={displaySubjects}\r\n                        placeholder='Select Subject'\r\n                    />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Paper Type</label>\r\n                <Dropdown\r\n                        onChange={handlePaperTypeSelection}\r\n                        selection\r\n                        fluid\r\n                        options={paperTypeSelection}\r\n                        placeholder='Select Paper Type'\r\n                    />\r\n            </Form.Field> \r\n        </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button.Group>\r\n            <Button color='black' onClick={handleOnClose}>Cancel</Button>\r\n            <Button.Or />\r\n            <Button onClick={handleSubmit} positive>Create Paper</Button>\r\n          </Button.Group>\r\n        </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SModal;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js",[],["221","222"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx",["223"],"import React,{useContext,useEffect} from 'react';\r\nimport {Segment,Loader} from \"semantic-ui-react\";\r\n\r\nimport Paper from \"./paper\";\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport { useState } from 'react';\r\n\r\nimport SearchForm from \"./SearchForm\";\r\n\r\n\r\nconst PaperHOC = () => {\r\n    const { \r\n        paperID,fetchQuestions,\r\n        authToken,isSubmittedDispatch,\r\n        updatePaperDetails,searchForQuestions\r\n    } = useContext(PaperContext);\r\n    \r\n    const [fetchedQuestions,setFetchedQuestions] = useState({});\r\n    const [pageCount,setPageCount] = useState(0);\r\n    const [currentActivePage, setCurrectActivePage] = useState(1);\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setCurrectActivePage(1);\r\n    },[paperID]);\r\n\r\n    const searchQuestionFromDB = (searchTerm) => {\r\n        searchForQuestions(authToken,paperID,searchTerm)\r\n            .then(({ data }) => {\r\n                if (data && data.success){\r\n                    setFetchedQuestions(data.paper);\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetchQuestions(paperID,authToken, currentActivePage - 1)\r\n            .then(({data}) => {\r\n                setPageCount(data.pageCount);\r\n                setFetchedQuestions(data.paper);\r\n                isSubmittedDispatch(data.paper.isSubmitted);\r\n\r\n                updatePaperDetails({\r\n                    grade: data.paper.grade,\r\n                    subject: data.paper.subject\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    },[paperID, currentActivePage]);\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div>\r\n                <Segment>\r\n                    <Loader active inline=\"centered\">Fetching questions...</Loader>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error){\r\n        return (\r\n            <Segment>\r\n                Error fetching questions\r\n            </Segment>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <SearchForm  searchQuestionFromDB={searchQuestionFromDB}/>\r\n            \r\n            <Paper \r\n                fetched_questions={fetchedQuestions.questions} \r\n                isSubmitted={fetchedQuestions.isSubmitted}\r\n                pageCount={pageCount}\r\n                setCurrectActivePage={setCurrectActivePage}\r\n                currentActivePage={currentActivePage} \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaperHOC;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx",[],["224","225"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx",["226"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx",["227","228"],"import React,{useState,useContext,useEffect} from \"react\";\r\nimport {Button,Header,Transition,Segment,Label,Pagination } from \"semantic-ui-react\";\r\nimport {motion} from 'framer-motion';\r\n\r\nimport QuestionComp from \"./question\";\r\nimport { PaperContext } from \"../context/paperContext\";\r\nimport StatusComp from \"./StatusComp\";\r\n\r\n\r\nconst CAN_REVIEW = \"can:review\";\r\n\r\n\r\nconst Paper = ({fetched_questions=[], pageCount,setCurrectActivePage, currentActivePage}) => {\r\n    const {authToken\r\n        ,createNotification\r\n        ,paperID\r\n        ,isSubmitted\r\n        ,submitPaperDispatch\r\n        ,approveQuestionDispatch\r\n        ,removeQuestionDispatch\r\n        ,socket_io_id\r\n        ,roles} = useContext(PaperContext);\r\n\r\n    const check_role = (role_required) => roles.includes(role_required);\r\n    const isReviewer = check_role(CAN_REVIEW);\r\n    \r\n    const [isHidden,setIsHidden] = useState(new Array(fetched_questions.length).fill(true));\r\n\r\n    const [paperQuestions,setPaperQuestions] = useState([]);\r\n    const [is_submitted,setIsSubmitted] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setPaperQuestions(fetched_questions);\r\n        setIsSubmitted(isSubmitted);\r\n    },[]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    },[isSubmitted]);\r\n\r\n    // set a fetch stuff here on click of the pagination thingy\r\n    const handlePageSwitch = (e, {activePage}) => {\r\n        setCurrectActivePage(activePage);\r\n    }\r\n\r\n    const updatePaperContent = (new_question,index) => {\r\n        let local_paper_copy = [...paperQuestions];\r\n        local_paper_copy[index] = new_question;\r\n        setPaperQuestions(local_paper_copy);\r\n    }\r\n\r\n\r\n    const addQuestion = (e) => {\r\n        setPaperQuestions([...paperQuestions,null]);\r\n    }\r\n\r\n    const removeQuestion = (questionId,index) => {\r\n        let reply = window.confirm(\"are you sure?\")\r\n\r\n        if (!reply)\r\n            return;\r\n        let paperQuestionsCopy = [...paperQuestions];\r\n        let question_object = paperQuestionsCopy[index];\r\n\r\n        let cleanUpFunc = () => {\r\n            paperQuestionsCopy.splice(index,1);\r\n            setPaperQuestions(paperQuestionsCopy);\r\n            createNotification(\"Success!\",\"success\",\"Question removed successfully\");\r\n        }\r\n\r\n        if(question_object){\r\n            removeQuestionDispatch(questionId,authToken)\r\n                .then(() => {\r\n                    cleanUpFunc();\r\n                })\r\n                .catch(error => {\r\n                    createNotification(\"Error!\",\"error\",error.message);\r\n                })\r\n        }else{\r\n            cleanUpFunc();\r\n        }\r\n    }\r\n\r\n    const updateQuestionsState = (status,index) => {\r\n        let paperQuestionsCopy = [...paperQuestions];\r\n        let question_object = paperQuestionsCopy[index];\r\n        question_object.status = status;\r\n        setPaperQuestions([...paperQuestionsCopy]);\r\n    }\r\n\r\n    const submitForReviewAction = () => {\r\n        submitPaperDispatch(socket_io_id,paperID,authToken)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    setIsActive(true);\r\n                    createNotification(\"Success!\",\"success\",data.message);\r\n                }else{\r\n                    throw new Error(\"Failed to submit paper for review\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                createNotification(\"Error!\",\"danger\",error.message);\r\n            })\r\n    }\r\n\r\n    const approveAuthorQuestion = (id,index) => {\r\n        approveQuestionDispatch(id,index,authToken)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    updateQuestionsState(\"approved\",index)\r\n                }else{\r\n                    throw new Error(\"Failed to approve question\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                createNotification(\"Error!\",\"danger\",error.message);\r\n            });\r\n    }\r\n\r\n    const toggleQuestionVisibility = (index) => {\r\n        let clone_state = [...isHidden];\r\n        clone_state[index] = clone_state[index] ? !clone_state[index] : true;\r\n        setIsHidden(clone_state)\r\n    }\r\n\r\n    // preventing this reloads\r\n    return (\r\n        <>\r\n            <StatusComp isActive={isActive} setIsActive={setIsActive} setIsSubmitted={setIsSubmitted}/>\r\n            <motion.div\r\n                initial={{ opacity:0 }}\r\n                animate={{ opacity:1, duration:0.4 }}\r\n            >      \r\n                <div style={{marginBottom:\"10px\", borderBottom:\"1px solid #dbdbdb\", paddingBottom:\"5px\"}}>\r\n                    <Button circular color=\"teal\" disabled={is_submitted} onClick={addQuestion} content='create question' icon='add' labelPosition='right'/>\r\n                    \r\n                    <Button \r\n                        circular\r\n                        color=\"orange\" \r\n                        disabled={check_role(CAN_REVIEW) || is_submitted}\r\n                        onClick={submitForReviewAction} \r\n                        content='submit paper' \r\n                        icon='send' \r\n                        labelPosition='right'/>\r\n                </div>\r\n\r\n                \r\n                <div style={{height:\"85vh\", overflowY:\"scroll\", marginTop:\"10px\", paddingRight:\"10px\", paddingLeft:\"10px\"}} >\r\n                    {paperQuestions.map((retrievedQuestion,index) => {\r\n                        return (\r\n                            <React.Fragment key={`question_${index}`}>\r\n                                \r\n                                    <Segment.Group horizontal>\r\n                                        <Segment onClick={(x) => toggleQuestionVisibility(index)} style={{cursor:\"pointer\"}} color='orange'>\r\n                                            <Header as='h3'>Question  {index + 1}</Header>\r\n                                        </Segment>\r\n                                        <Segment basic textAlign={\"center\"} color=\"green\">\r\n                                            <Label color='green'>\r\n                                                {retrievedQuestion && retrievedQuestion.status ? retrievedQuestion.status.toUpperCase() : \"ONGOING\"}\r\n                                            </Label>\r\n                                        </Segment>\r\n                                        <Segment basic textAlign={\"right\"} color='red'>\r\n                                        {is_submitted && check_role(CAN_REVIEW)? \r\n                                            <Button basic color=\"orange\" \r\n                                                circular\r\n                                                disabled={retrievedQuestion && retrievedQuestion.isExposed} \r\n                                                icon \r\n                                                onClick={(e) => approveAuthorQuestion(retrievedQuestion && retrievedQuestion._id,index)} \r\n                                                content=\"Approve\" icon=\"thumbs up alternate outline\" labelPosition=\"right\"/> : null\r\n                                        }\r\n                                            \r\n                                            <Button circular basic color=\"red\" disabled={isSubmitted && !isReviewer} onClick={(e) => removeQuestion(retrievedQuestion ? retrievedQuestion._id:null,index)} content=\"Delete\" icon=\"trash alternate outline\" labelPosition=\"right\"/>\r\n                                        \r\n                                        </Segment>\r\n                                    </Segment.Group>\r\n                                \r\n                                <Transition visible={isHidden[index] ? !isHidden[index] : true} animation='drop' duration={450}>\r\n                                    <div style={{marginBottom:\"20px\"}}>\r\n                                        <QuestionComp key={`question_${index}`} updatePaperContent={updatePaperContent} retrievedQuestion={retrievedQuestion} index={index}/>\r\n                                    </div>\r\n                                </Transition>\r\n\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                    { pageCount > 0 ? <Pagination onPageChange={handlePageSwitch} defaultActivePage={currentActivePage} totalPages={pageCount} /> : null}\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Paper;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SCard.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\Navbar.jsx",["229"],"import React, {useContext} from 'react'\r\nimport { Button, Menu,Icon, Label } from 'semantic-ui-react';\r\nimport {Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport { PaperContext } from '../context/paperContext';\r\nimport AdminFavi from '../images/adminfavi.jpg';\r\n\r\nconst Navbar = (props) => {\r\n    const { logoutDispatcher } = useContext(PaperContext);\r\n\r\n    const signOut = () => {\r\n        logoutDispatcher();\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const navigateHome = () => props.history.push('/dashboard');\r\n    const navigateNotifications = () => props.history.push('/notifications');\r\n    const navigateToAnalytics = () => props.history.push('/analytics')\r\n\r\n    return (\r\n      <Menu size='small' attached=\"top\" style={{marginTop:\"5px\"}}>\r\n        <Menu.Item header onClick={navigateHome}>\r\n          <img src={AdminFavi} />\r\n        </Menu.Item>\r\n        <Menu.Menu position='right'>\r\n          <Menu.Item\r\n            name=\"My Panel\"\r\n            onClick={navigateToAnalytics}\r\n          />\r\n          <Menu.Item onClick={navigateNotifications}>\r\n            <Icon name='bell' /> Notifications\r\n            <Label color='teal'>\r\n              22\r\n            </Label>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Button primary onClick={signOut}>Sign Out</Button>\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\actionTypes.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FolderComp.jsx",[],["230","231"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\analytics.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\Notifications.jsx",["232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"import React from 'react'\r\nimport { Feed, Icon } from 'semantic-ui-react'\r\nimport Navbar from './Navbar';\r\n\r\nconst Notifications = () => (\r\n    <>\r\n    <Navbar/>\r\n  <Feed>\r\n    <Feed.Event>\r\n      <Feed.Label>\r\n        <img src='/images/avatar/small/elliot.jpg' />\r\n      </Feed.Label>\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User>Elliot Fu</Feed.User> added you as a friend\r\n          <Feed.Date>1 Hour Ago</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Meta>\r\n          <Feed.Like>\r\n            <Icon name='like' />4 Likes\r\n          </Feed.Like>\r\n        </Feed.Meta>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n\r\n    <Feed.Event>\r\n      <Feed.Label image='/images/avatar/small/helen.jpg' />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <a>Helen Troy</a> added <a>2 new illustrations</a>\r\n          <Feed.Date>4 days ago</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <a>\r\n            <img src='/images/wireframe/image.png' />\r\n          </a>\r\n          <a>\r\n            <img src='/images/wireframe/image.png' />\r\n          </a>\r\n        </Feed.Extra>\r\n        <Feed.Meta>\r\n          <Feed.Like>\r\n            <Icon name='like' />1 Like\r\n          </Feed.Like>\r\n        </Feed.Meta>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n\r\n    <Feed.Event>\r\n      <Feed.Label image='/images/avatar/small/jenny.jpg' />\r\n      <Feed.Content>\r\n        <Feed.Summary\r\n          date='2 Days Ago'\r\n          user='Jenny Hess'\r\n          content='add you as a friend'\r\n        />\r\n        <Feed.Meta>\r\n          <Feed.Like>\r\n            <Icon name='like' />8 Likes\r\n          </Feed.Like>\r\n        </Feed.Meta>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n\r\n    <Feed.Event>\r\n      <Feed.Label image='/images/avatar/small/joe.jpg' />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <a>Joe Henderson</a> posted on his page\r\n          <Feed.Date>3 days ago</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra text>\r\n          Ours is a life of constant reruns. We're always circling back to where\r\n          we'd we started, then starting all over again. Even if we don't run\r\n          extra laps that day, we surely will come back for more of the same\r\n          another day soon.\r\n        </Feed.Extra>\r\n        <Feed.Meta>\r\n          <Feed.Like>\r\n            <Icon name='like' />5 Likes\r\n          </Feed.Like>\r\n        </Feed.Meta>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n\r\n    <Feed.Event>\r\n      <Feed.Label image='/images/avatar/small/justen.jpg' />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <a>Justen Kitsune</a> added <a>2 new photos</a> of you\r\n          <Feed.Date>4 days ago</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <a>\r\n            <img src='/images/wireframe/image.png' />\r\n          </a>\r\n          <a>\r\n            <img src='/images/wireframe/image.png' />\r\n          </a>\r\n        </Feed.Extra>\r\n        <Feed.Meta>\r\n          <Feed.Like>\r\n            <Icon name='like' />\r\n            41 Likes\r\n          </Feed.Like>\r\n        </Feed.Meta>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  </Feed>\r\n  </>\r\n)\r\n\r\nexport default Notifications;",["246","247"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\StatusComp.jsx",["248"],"import React, { useState, useContext } from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nimport { PaperContext } from '../context/paperContext';\r\n\r\n\r\nconst StatusComp = ({ isActive, setIsActive, setIsSubmitted }) => {\r\n    const {authToken\r\n        ,isSubmittedDispatch\r\n        ,fetchPapers\r\n        ,socketIO\r\n    } = useContext(PaperContext);\r\n\r\n    // we are updating the context too much\r\n    const [processingMessages, setProcessingMessages] = useState(\"\");\r\n\r\n    const setStatusSteps = (msg) => {\r\n        console.log(msg);\r\n        setProcessingMessages(before => before + msg + '\\n');\r\n    }\r\n\r\n    socketIO.on('submission_status',(msg) => {\r\n        setStatusSteps(msg);\r\n    })\r\n\r\n    socketIO.on('submission_error',(msg) => {\r\n        setStatusSteps(msg);\r\n        setTimeout(() => {\r\n            setIsActive(false);\r\n        },3000);\r\n    })\r\n\r\n    socketIO.on('submission_end',(msg) => {\r\n        setStatusSteps(msg);\r\n        \r\n        setIsSubmitted(true);\r\n        isSubmittedDispatch(true);\r\n        fetchPapers(authToken);\r\n\r\n        setTimeout(() => {\r\n            setIsActive(false);\r\n        },3000);\r\n    })\r\n\r\n    return (\r\n        <Dimmer active={isActive}>\r\n            <Loader content={\"submitting paper ... please wait ...\"}/>\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default StatusComp;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SearchForm.jsx",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":24,"nodeType":"255","messageId":"256","endLine":1,"endColumn":34},{"ruleId":"253","severity":1,"message":"257","line":2,"column":14,"nodeType":"255","messageId":"256","endLine":2,"endColumn":19},{"ruleId":"253","severity":1,"message":"258","line":2,"column":20,"nodeType":"255","messageId":"256","endLine":2,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":17,"column":9,"nodeType":"261","messageId":"262","endLine":22,"endColumn":10},{"ruleId":"259","severity":1,"message":"260","line":26,"column":9,"nodeType":"261","messageId":"262","endLine":31,"endColumn":10},{"ruleId":"253","severity":1,"message":"263","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":13},{"ruleId":"264","severity":1,"message":"265","line":83,"column":258,"nodeType":"266","endLine":83,"endColumn":282},{"ruleId":"267","severity":1,"message":"268","line":4,"column":22,"nodeType":"269","messageId":"270","endLine":4,"endColumn":24},{"ruleId":"253","severity":1,"message":"271","line":2,"column":14,"nodeType":"255","messageId":"256","endLine":2,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":13,"column":7,"nodeType":"274","endLine":13,"endColumn":9,"suggestions":"275"},{"ruleId":"249","replacedBy":"276"},{"ruleId":"251","replacedBy":"277"},{"ruleId":"253","severity":1,"message":"278","line":2,"column":18,"nodeType":"255","messageId":"256","endLine":2,"endColumn":24},{"ruleId":"253","severity":1,"message":"279","line":2,"column":31,"nodeType":"255","messageId":"256","endLine":2,"endColumn":39},{"ruleId":"249","replacedBy":"280"},{"ruleId":"251","replacedBy":"281"},{"ruleId":"249","replacedBy":"282"},{"ruleId":"251","replacedBy":"283"},{"ruleId":"249","replacedBy":"284"},{"ruleId":"251","replacedBy":"285"},{"ruleId":"249","replacedBy":"286"},{"ruleId":"251","replacedBy":"287"},{"ruleId":"249","replacedBy":"288"},{"ruleId":"251","replacedBy":"289"},{"ruleId":"249","replacedBy":"290"},{"ruleId":"251","replacedBy":"291"},{"ruleId":"272","severity":1,"message":"273","line":12,"column":7,"nodeType":"274","endLine":12,"endColumn":9,"suggestions":"292"},{"ruleId":"272","severity":1,"message":"293","line":49,"column":7,"nodeType":"274","endLine":49,"endColumn":9,"suggestions":"294"},{"ruleId":"249","replacedBy":"295"},{"ruleId":"251","replacedBy":"296"},{"ruleId":"272","severity":1,"message":"297","line":56,"column":7,"nodeType":"274","endLine":56,"endColumn":35,"suggestions":"298"},{"ruleId":"249","replacedBy":"299"},{"ruleId":"251","replacedBy":"300"},{"ruleId":"272","severity":1,"message":"301","line":45,"column":7,"nodeType":"274","endLine":45,"endColumn":9,"suggestions":"302"},{"ruleId":"272","severity":1,"message":"303","line":36,"column":7,"nodeType":"274","endLine":36,"endColumn":9,"suggestions":"304"},{"ruleId":"264","severity":1,"message":"265","line":172,"column":67,"nodeType":"266","endLine":172,"endColumn":101},{"ruleId":"305","severity":1,"message":"306","line":23,"column":11,"nodeType":"307","endLine":23,"endColumn":34},{"ruleId":"249","replacedBy":"308"},{"ruleId":"251","replacedBy":"309"},{"ruleId":"305","severity":1,"message":"306","line":11,"column":9,"nodeType":"307","endLine":11,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":30,"column":11,"nodeType":"307","endLine":30,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":30,"column":35,"nodeType":"307","endLine":30,"endColumn":38},{"ruleId":"310","severity":1,"message":"311","line":34,"column":11,"nodeType":"307","endLine":34,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":35,"column":13,"nodeType":"307","endLine":35,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":37,"column":11,"nodeType":"307","endLine":37,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":38,"column":13,"nodeType":"307","endLine":38,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":69,"column":11,"nodeType":"307","endLine":69,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":90,"column":11,"nodeType":"307","endLine":90,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":90,"column":39,"nodeType":"307","endLine":90,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":94,"column":11,"nodeType":"307","endLine":94,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":95,"column":13,"nodeType":"307","endLine":95,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":97,"column":11,"nodeType":"307","endLine":97,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":98,"column":13,"nodeType":"307","endLine":98,"endColumn":54},{"ruleId":"249","replacedBy":"312"},{"ruleId":"251","replacedBy":"313"},{"ruleId":"253","severity":1,"message":"314","line":15,"column":12,"nodeType":"255","messageId":"256","endLine":15,"endColumn":30},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Segment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'SCard' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'fetchPapers'. Either include them or remove the dependency array.","ArrayExpression",["317"],["315"],["316"],"'Header' is defined but never used.","'Checkbox' is defined but never used.",["315"],["316"],["315"],["316"],["315"],["316"],["315"],["316"],["315"],["316"],["315"],["316"],["318"],"React Hook useEffect has missing dependencies: 'authToken' and 'createNotification'. Either include them or remove the dependency array.",["319"],["315"],["316"],"React Hook useEffect has missing dependencies: 'authToken', 'fetchQuestions', 'isSubmittedDispatch', and 'updatePaperDetails'. Either include them or remove the dependency array.",["320"],["315"],["316"],"React Hook useEffect has a missing dependency: 'retrievedQuestion'. Either include it or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'fetched_questions' and 'isSubmitted'. Either include them or remove the dependency array. If 'setPaperQuestions' needs the current value of 'fetched_questions', you can also switch to useReducer instead of useState and read 'fetched_questions' in the reducer.",["322"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["315"],["316"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["315"],["316"],"'processingMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"323","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [authToken, fetchPapers]",{"range":"334","text":"335"},{"range":"336","text":"335"},"Update the dependencies array to be: [authToken, createNotification]",{"range":"337","text":"338"},"Update the dependencies array to be: [paperID, currentActivePage, fetchQuestions, authToken, isSubmittedDispatch, updatePaperDetails]",{"range":"339","text":"340"},"Update the dependencies array to be: [retrievedQuestion]",{"range":"341","text":"342"},"Update the dependencies array to be: [fetched_questions, isSubmitted]",{"range":"343","text":"344"},[442,444],"[authToken, fetchPapers]",[379,381],[1776,1778],"[authToken, createNotification]",[1785,1813],"[paperID, currentActivePage, fetchQuestions, authToken, isSubmittedDispatch, updatePaperDetails]",[2160,2162],"[retrievedQuestion]",[1237,1239],"[fetched_questions, isSubmitted]"]