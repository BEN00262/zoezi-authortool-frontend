[{"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js":"1","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js":"2","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx":"3","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx":"4","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx":"5","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js":"6","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx":"7","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx":"8","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx":"9","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx":"10","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx":"11","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx":"12","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js":"13","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js":"14","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx":"15","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx":"16","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js":"17","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx":"18","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js":"19","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js":"20","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx":"21","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx":"22","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx":"23","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx":"24","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js":"25","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js":"26","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx":"27","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx":"28","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js":"29","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx":"30","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx":"31","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx":"32","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx":"33","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx":"34"},{"size":362,"mtime":1609176012785,"results":"35","hashOfConfig":"36"},{"size":744,"mtime":1609299009078,"results":"37","hashOfConfig":"36"},{"size":1965,"mtime":1609965176341,"results":"38","hashOfConfig":"36"},{"size":4432,"mtime":1609966262069,"results":"39","hashOfConfig":"36"},{"size":701,"mtime":1609181893606,"results":"40","hashOfConfig":"36"},{"size":484,"mtime":1609931921040,"results":"41","hashOfConfig":"36"},{"size":301,"mtime":1609961961054,"results":"42","hashOfConfig":"36"},{"size":6541,"mtime":1609661285541,"results":"43","hashOfConfig":"36"},{"size":5358,"mtime":1609965905514,"results":"44","hashOfConfig":"36"},{"size":788,"mtime":1609967015571,"results":"45","hashOfConfig":"36"},{"size":2333,"mtime":1609303848599,"results":"46","hashOfConfig":"36"},{"size":1635,"mtime":1609663197916,"results":"47","hashOfConfig":"36"},{"size":2928,"mtime":1609317645542,"results":"48","hashOfConfig":"36"},{"size":6209,"mtime":1609661792928,"results":"49","hashOfConfig":"36"},{"size":1655,"mtime":1609306100282,"results":"50","hashOfConfig":"36"},{"size":259,"mtime":1609298596832,"results":"51","hashOfConfig":"36"},{"size":413,"mtime":1609300664691,"results":"52","hashOfConfig":"36"},{"size":1164,"mtime":1609966888991,"results":"53","hashOfConfig":"36"},{"size":511,"mtime":1613394005835,"results":"54","hashOfConfig":"55"},{"size":413,"mtime":1613299167435,"results":"56","hashOfConfig":"55"},{"size":259,"mtime":1613299167432,"results":"57","hashOfConfig":"55"},{"size":2271,"mtime":1613406557070,"results":"58","hashOfConfig":"55"},{"size":2492,"mtime":1613406890391,"results":"59","hashOfConfig":"55"},{"size":8712,"mtime":1613412593322,"results":"60","hashOfConfig":"55"},{"size":6255,"mtime":1613410995386,"results":"61","hashOfConfig":"55"},{"size":2445,"mtime":1613411564559,"results":"62","hashOfConfig":"55"},{"size":658,"mtime":1613303544222,"results":"63","hashOfConfig":"55"},{"size":1465,"mtime":1613395765361,"results":"64","hashOfConfig":"55"},{"size":918,"mtime":1613404036712,"results":"65","hashOfConfig":"55"},{"size":1368,"mtime":1613400228331,"results":"66","hashOfConfig":"55"},{"size":3206,"mtime":1613399764311,"results":"67","hashOfConfig":"55"},{"size":6083,"mtime":1613416420227,"results":"68","hashOfConfig":"55"},{"size":7235,"mtime":1613406493633,"results":"69","hashOfConfig":"55"},{"size":787,"mtime":1613404432437,"results":"70","hashOfConfig":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1fbvc2n",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ceaoof",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\reportWebVitals.js",[],["152","153"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\question.jsx",["154","155","156","157","158"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\paper.jsx",["159","160"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\TextEditors.jsx",["161"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SCard.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\normalQues.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\ContentPage.jsx",["162"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SideBar.jsx",["163"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport {Card,List,Header} from \"semantic-ui-react\";\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\n\r\n// this will be initialized from the server\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n\r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[]);\r\n\r\n    const [paper,setPaper] = useState({\r\n        grade:\"\",\r\n        subject:\"\",\r\n        paperType:\"\"\r\n    })\r\n\r\n    const handleInputChange = (e) => {\r\n        setPaper({...paper,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const createPaper = () => {\r\n        createPaperDispatch({...paper},authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id,authToken);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SModal handleInputChange={handleInputChange} createPaper={createPaper}/>\r\n            {Object.keys(papers).map((paperType,p_index) => {\r\n                return (\r\n                    <React.Fragment key={`pt_${p_index}`}>\r\n                        <Header as=\"h5\">{paperType}</Header>\r\n                        <Card>\r\n                            <Card.Content>\r\n                                <List divided verticalAlign='middle'>\r\n                                        {papers[paperType].papers.map((pp,index) => {\r\n                                            return (\r\n                                                <List.Item key={`pp_${index}`} onClick={() => handlePaperSelect(`${pp.id}`)}>\r\n                                                    <List.Icon name='file alternate' />\r\n                                                    <List.Content>\r\n                                                        <List.Header as='a'>{pp.name}</List.Header>\r\n                                                    </List.Content>\r\n                                                </List.Item>\r\n                                            );\r\n                                        })}\r\n                                </List>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </React.Fragment>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;",["164","165"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\SModal.jsx",["166","167"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\context\\paperContext.js",[],["168","169"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\pages\\login.jsx",[],["170","171"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\routes\\ProtectedRoute.js",[],["172","173"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\tool\\src\\components\\analytics.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\index.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\routes\\ProtectedRoute.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\pages\\login.jsx",[],["174","175"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SideBar.jsx",["176"],"import React,{useEffect,useContext} from 'react';\r\nimport {Card,List,Header} from \"semantic-ui-react\";\r\n\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport SModal from './SModal';\r\n\r\n// this will be initialized from the server\r\nconst SideBar = () => {\r\n    const {changePaperID,createPaperDispatch,papers,authToken,fetchPapers} = useContext(PaperContext);\r\n\r\n    useEffect(() => {\r\n        fetchPapers(authToken);\r\n    },[authToken]);\r\n\r\n    const createPaper = (paper) => {\r\n        createPaperDispatch(paper,authToken);\r\n    }\r\n\r\n    const handlePaperSelect = (paper_id) => {\r\n        changePaperID(paper_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SModal createPaper={createPaper}/>\r\n            <div  style={{height:\"85vh\", overflowY:\"scroll\", marginTop:\"10px\", padding:\"10px\"}}>\r\n                {Object.keys(papers).map((paperType,p_index) => {\r\n                    return (\r\n                        <React.Fragment key={`pt_${p_index}`}>\r\n                            <Header as=\"h5\">{paperType}</Header>\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    <List divided verticalAlign='middle'>\r\n                                            {papers[paperType].papers.map((pp,index) => {\r\n                                                return (\r\n                                                    <List.Item key={`pp_${index}`} onClick={() => handlePaperSelect(`${pp.id}`)}>\r\n                                                        <List.Icon name='file alternate' />\r\n                                                        <List.Content>\r\n                                                            <List.Header as='a'>{pp.name}</List.Header>\r\n                                                        </List.Content>\r\n                                                    </List.Item>\r\n                                                );\r\n                                            })}\r\n                                    </List>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;",["177","178"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\SModal.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\comprehension.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\paperContext.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\context\\reducer.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\topic.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paperhoc.jsx",["179"],"import React,{useContext,useEffect} from 'react';\r\nimport {Segment,Loader} from \"semantic-ui-react\";\r\n\r\nimport Paper from \"./paper\";\r\nimport {PaperContext} from \"../context/paperContext\";\r\nimport { useState } from 'react';\r\n\r\n\r\nconst PaperHOC = () => {\r\n    const { paperID,fetchQuestions,authToken } = useContext(PaperContext);\r\n    const [fetchedQuestions,setFetchedQuestions] = useState([]);\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetchQuestions(paperID,authToken)\r\n            .then(({data}) => {\r\n                setFetchedQuestions(data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setError(error.message);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    },[paperID]);\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div>\r\n                <Segment>\r\n                    <Loader active inline=\"centered\">Fetching questions...</Loader>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error){\r\n        return (\r\n            <Segment>\r\n                Error fetching questions\r\n            </Segment>\r\n        );\r\n    }\r\n\r\n    \r\n    return (\r\n        <Paper fetched_questions={fetchedQuestions.questions} is_submitted={fetchedQuestions.isSubmitted}/>\r\n    )\r\n}\r\n\r\nexport default PaperHOC;","C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\App.js",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\FormComp.jsx",[],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\question.jsx",["180","181"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\normalQues.jsx",["182"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\paper.jsx",["183","184"],"import React,{useState,useContext,useEffect} from \"react\";\r\nimport {Button,Header,Transition,Segment,Label} from \"semantic-ui-react\";\r\nimport {motion} from 'framer-motion';\r\n\r\nimport QuestionComp from \"./question\";\r\nimport {PaperContext} from \"../context/paperContext\";\r\n\r\n\r\nconst CAN_REVIEW = \"can:review\";\r\n\r\n\r\n// first we will fetch the already created questions from the database and then enable the use to create questions\r\nconst Paper = ({fetched_questions=[],is_submitted = false}) => {\r\n    const {authToken\r\n        ,createNotification\r\n        ,paperID\r\n        ,submitPaperDispatch\r\n        ,approveQuestionDispatch\r\n        ,removeQuestionDispatch\r\n        ,fetchPapers\r\n        ,roles} = useContext(PaperContext);\r\n\r\n    const check_role = (role_required) => {\r\n        return roles.includes(role_required);\r\n    }\r\n\r\n    const [isHidden,setIsHidden] = useState([]);\r\n    const [paperQuestions,setPaperQuestions] = useState(fetched_questions);\r\n    \r\n    // useEffect(() => {\r\n    //     fetchPapers(authToken);\r\n    // },[]);\r\n\r\n    const updatePaperContent = (new_question,index) => {\r\n        let local_paper_copy = [...paperQuestions];\r\n        local_paper_copy[index] = new_question;\r\n        setPaperQuestions(local_paper_copy);\r\n    }\r\n\r\n\r\n    const addQuestion = (e) => {\r\n        setPaperQuestions([...paperQuestions,null])\r\n    }\r\n\r\n    const removeQuestion = (questionId,index) => {\r\n\r\n        // show something like a prompt before allowing this\r\n        let paperQuestionsCopy = [...paperQuestions];\r\n        let question_object = paperQuestionsCopy[index];\r\n\r\n        let cleanUpFunc = () => {\r\n            paperQuestionsCopy.splice(index,1);\r\n            // console.log(paperQuestionsCopy);\r\n            setPaperQuestions(paperQuestionsCopy);\r\n            createNotification(\"Success!\",\"success\",\"Question removed successfully\");\r\n        }\r\n\r\n        if(question_object){\r\n            removeQuestionDispatch(questionId,authToken)\r\n                .then(() => {\r\n                    cleanUpFunc();\r\n                })\r\n                .catch(error => {\r\n                    createNotification(\"Error!\",\"error\",error.message);\r\n                })\r\n        }else{\r\n            cleanUpFunc();\r\n        }\r\n    }\r\n\r\n    const submitForReviewAction = () => {\r\n        submitPaperDispatch(paperID)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    createNotification(\"Success!\",\"success\",\"Paper Successfully submitted\");\r\n                    fetchPapers(authToken);\r\n                }else{\r\n                    throw new Error(\"Failed to submit paper for review\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                createNotification(\"Error!\",\"error\",error.message);\r\n            })\r\n    }\r\n\r\n    const approveAuthorQuestion = (id,index) => {\r\n        approveQuestionDispatch(id,index,authToken)\r\n            .then(({data}) => {\r\n                if(data.success){\r\n                    let paperQuestionsCopy = [...paperQuestions];\r\n                    let question_object = paperQuestionsCopy[index];\r\n                    question_object.status = \"approved\";\r\n                    setPaperQuestions([...paperQuestionsCopy]);\r\n                }else{\r\n                    throw new Error(\"Failed to approve question\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                createNotification(\"Error!\",\"error\",error.message);\r\n            });\r\n    }\r\n\r\n    // a question should manage this for christ sake\r\n    const toggleQuestionVisibility = (index) => {\r\n        let clone_state = [...isHidden];\r\n        clone_state[index] = clone_state[index] ? !clone_state[index] : true;\r\n        setIsHidden(clone_state)\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity:0 }}\r\n            animate={{ opacity:1, duration:0.4 }}\r\n        >      \r\n            <div style={{marginBottom:\"20px\"}}>\r\n                <Button color=\"teal\" disabled={is_submitted} onClick={addQuestion} content='create question' icon='add' labelPosition='right'/>\r\n                \r\n                <Button \r\n                    color=\"orange\" \r\n                    disabled={check_role(CAN_REVIEW) || is_submitted}\r\n                    onClick={submitForReviewAction} \r\n                    content='submit paper' \r\n                    icon='send' \r\n                    labelPosition='right'/>\r\n            </div>\r\n\r\n            \r\n            <div style={{height:\"100vh\", overflowY:\"scroll\", marginTop:\"10px\", paddingRight:\"10px\", paddingLeft:\"10px\"}} >\r\n                {paperQuestions.map((retrievedQuestion,index) => {\r\n                    return (\r\n                        <React.Fragment key={`question_${index}`}>\r\n                            \r\n                                <Segment.Group horizontal>\r\n                                    <Segment onClick={(x) => toggleQuestionVisibility(index)} style={{cursor:\"pointer\"}} color='orange'>\r\n                                        <Header as='h3'>Question  {index + 1}</Header>\r\n                                    </Segment>\r\n                                    <Segment basic textAlign={\"center\"} color=\"green\">\r\n                                        <Label color='green'>\r\n                                            {retrievedQuestion && retrievedQuestion.status ? retrievedQuestion.status.toUpperCase() : \"ONGOING\"}\r\n                                        </Label>\r\n                                    </Segment>\r\n                                    <Segment basic textAlign={\"right\"} color='red'>\r\n                                    {is_submitted && check_role(CAN_REVIEW)? \r\n                                        <Button basic color=\"orange\" \r\n                                            disabled={retrievedQuestion && retrievedQuestion.isExposed} \r\n                                            icon \r\n                                            onClick={(e) => approveAuthorQuestion(retrievedQuestion && retrievedQuestion._id,index)} \r\n                                            content=\"Approve\" icon=\"thumbs up alternate outline\" labelPosition=\"right\"/> : null\r\n                                    }\r\n                                        \r\n                                        <Button basic color=\"red\" onClick={(e) => removeQuestion(retrievedQuestion ? retrievedQuestion._id:null,index)} content=\"Delete\" icon=\"trash alternate outline\" labelPosition=\"right\"/>\r\n                                    \r\n                                    </Segment>\r\n                                </Segment.Group>\r\n                            \r\n                            <Transition visible={isHidden[index] ? !isHidden[index] : true} animation='drop' duration={450}>\r\n                                <div style={{marginBottom:\"20px\"}}>\r\n                                    <QuestionComp key={`question_${index}`} updatePaperContent={updatePaperContent} retrievedQuestion={retrievedQuestion} index={index}/>\r\n                                </div>\r\n                            </Transition>\r\n\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n\r\n            </div>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Paper;",["185","186"],"C:\\Users\\USER\\benFiles\\ben\\zoezi\\mockEntryTool\\restserver\\zoezi-entry-tool\\src\\components\\ContentPage.jsx",[],["187","188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":1,"column":24,"nodeType":"195","messageId":"196","endLine":1,"endColumn":34},{"ruleId":"193","severity":1,"message":"197","line":2,"column":14,"nodeType":"195","messageId":"196","endLine":2,"endColumn":19},{"ruleId":"193","severity":1,"message":"198","line":2,"column":20,"nodeType":"195","messageId":"196","endLine":2,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":17,"column":9,"nodeType":"201","messageId":"202","endLine":22,"endColumn":10},{"ruleId":"199","severity":1,"message":"200","line":26,"column":9,"nodeType":"201","messageId":"202","endLine":31,"endColumn":10},{"ruleId":"193","severity":1,"message":"203","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":13},{"ruleId":"204","severity":1,"message":"205","line":83,"column":258,"nodeType":"206","endLine":83,"endColumn":282},{"ruleId":"207","severity":1,"message":"208","line":4,"column":22,"nodeType":"209","messageId":"210","endLine":4,"endColumn":24},{"ruleId":"193","severity":1,"message":"211","line":2,"column":14,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":13,"column":7,"nodeType":"214","endLine":13,"endColumn":9,"suggestions":"215"},{"ruleId":"189","replacedBy":"216"},{"ruleId":"191","replacedBy":"217"},{"ruleId":"193","severity":1,"message":"218","line":2,"column":18,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"219","line":2,"column":31,"nodeType":"195","messageId":"196","endLine":2,"endColumn":39},{"ruleId":"189","replacedBy":"220"},{"ruleId":"191","replacedBy":"221"},{"ruleId":"189","replacedBy":"222"},{"ruleId":"191","replacedBy":"223"},{"ruleId":"189","replacedBy":"224"},{"ruleId":"191","replacedBy":"225"},{"ruleId":"189","replacedBy":"226"},{"ruleId":"191","replacedBy":"227"},{"ruleId":"212","severity":1,"message":"228","line":13,"column":7,"nodeType":"214","endLine":13,"endColumn":18,"suggestions":"229"},{"ruleId":"189","replacedBy":"230"},{"ruleId":"191","replacedBy":"231"},{"ruleId":"212","severity":1,"message":"232","line":28,"column":7,"nodeType":"214","endLine":28,"endColumn":16,"suggestions":"233"},{"ruleId":"199","severity":1,"message":"200","line":43,"column":9,"nodeType":"201","messageId":"202","endLine":48,"endColumn":10},{"ruleId":"199","severity":1,"message":"200","line":52,"column":9,"nodeType":"201","messageId":"202","endLine":57,"endColumn":10},{"ruleId":"212","severity":1,"message":"234","line":44,"column":7,"nodeType":"214","endLine":44,"endColumn":9,"suggestions":"235"},{"ruleId":"193","severity":1,"message":"236","line":1,"column":35,"nodeType":"195","messageId":"196","endLine":1,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":148,"column":63,"nodeType":"206","endLine":148,"endColumn":97},{"ruleId":"189","replacedBy":"237"},{"ruleId":"191","replacedBy":"238"},{"ruleId":"189","replacedBy":"239"},{"ruleId":"191","replacedBy":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Segment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'SCard' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'fetchPapers'. Either include them or remove the dependency array.","ArrayExpression",["243"],["241"],["242"],"'Header' is defined but never used.","'Checkbox' is defined but never used.",["241"],["242"],["241"],["242"],["241"],["242"],["241"],["242"],"React Hook useEffect has a missing dependency: 'fetchPapers'. Either include it or remove the dependency array.",["244"],["241"],["242"],"React Hook useEffect has missing dependencies: 'authToken' and 'fetchQuestions'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'retrievedQuestion'. Either include it or remove the dependency array.",["246"],"'useEffect' is defined but never used.",["241"],["242"],["241"],["242"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"247","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [authToken, fetchPapers]",{"range":"254","text":"255"},{"range":"256","text":"255"},"Update the dependencies array to be: [authToken, fetchQuestions, paperID]",{"range":"257","text":"258"},"Update the dependencies array to be: [retrievedQuestion]",{"range":"259","text":"260"},[442,444],"[authToken, fetchPapers]",[433,444],[903,912],"[authToken, fetchQuestions, paperID]",[1877,1879],"[retrievedQuestion]"]